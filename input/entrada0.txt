%asdlkf asf

registro teste_registro {
    inteiro a;
    inteiro d[2];
    real    b;
    inteiro vec[2][2];
    real    b;
    Pessoa  teste[1][1];
    real    b;
    Pessoa  teste_1[2];
    real    b;
    cadeia  c;
}

registro teste_registro1 {
    inteiro a, z, y, w;
    real    b;
    cadeia  c;
}

constantes {
    cadeia frase = "frase aqui";
    inteiro a = 2;
    real    b = 2.23,c = 23.40;
}

variaveis {
    Pessoa  teste[0];
    Pessoa  teste2[2][2] = [0.1, 0.2, 0.3; 1.1, 1.2, 1.3; 2.1, 2.2, 2.3];
    inteiro teste3   = 2;
    real    teste_2 = 2.23,c = 23.40;
    cadeia  c;
    booleano d      = verdadeiro;
    inteiro a[2], teste[3], teste_a = 2, teste_b = 200;
    inteiro b[2] = [0,1,2], m[1][1] = [1,2; 3,4];
    real    c[2][2];
    real    d[2][2] = [0.1, 0.2, 0.3; 1.1, 1.2, 1.3; 2.1, 2.2, 2.3];
}

funcao inteiro funcao_teste_1 ( ){
    retorno ;
}

funcao inteiro funcao_teste_2 (Pessoa nova_pessoa, inteiro local_1, real local_2, cadeia a[], inteiro b[][]){
    constantes {
        inteiro local_a = 2;
        real    local_b = 2.23,c = 23.40;
    }

    variaveis {
        inteiro  local_teste   = 2;
        real     locao_teste_2 = 2.23,c = 23.40;
        cadeia   local_c;
        teste_registro1 tttteste; 
        booleano local_d      = verdadeiro;
        teste_registro ttt;
    }
    
    ttt.a.outro = "oxoxox";
    ttt.a = 12;
    

   retornar local_a;
}

funcao vazio algoritmo () {
    variaveis {
        inteiro local = 1;
        char    teste;    
    }
    a = 2;
    a = Pessoa.idade;
    a[2] = "Cadeia_de_cadeia";
    b[2][2] = "Cadeia_de_cadeia";
    
    
    retorno ;
}
